<configuration scan="false" scanPeriod="60 seconds" debug="true">
    <!-- 日志文件主目录：这里是当前目录下的logs目录下 -->
    <property name="LOG_HOME" value="./logs/"/>
    <property name="maxHistory" value="30"/>
    <property name="LOG_PATTERN" value="%d{HH:mm:ss:SSS}[%-5p] [%X{event}|%X{id}|%X{number}] %m %n"/>
    <contextName>spring.application.name</contextName>

    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- 设置日志输出为文件 根据日志级别进行不同级别日志文件的输出 -->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}info.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}info.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
            <maxFileSize>10MB</maxFileSize>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <immediateFlush>true</immediateFlush>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
    </appender>
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}error.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件路径：这里%d{yyyyMMdd}表示按天分类日志 -->
            <fileNamePattern>${LOG_HOME}error.log.%d{yyyy-MM-dd}</fileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <immediateFlush>true</immediateFlush>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>
    <root level="DEBUG">
        <appender-ref ref="INFO_FILE"/>
        <appender-ref ref="ERROR_FILE"/>
        <appender-ref ref="STDOUT"/>
    </root>
    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="INFO_FILE" />
    </root>

<!--    <logger name="net.sf.ehcache" level="INFO"/>-->
<!--    <logger name="druid.sql" level="INFO"/>-->

    <!--  多环境配置 按照active profile选择分支  -->
<!--    <springProfile name="dev">-->
<!--        &lt;!&ndash; root节点 全局日志级别，用来指定最基础的日志输出级别 我本地测试,只记录error级别日志 &ndash;&gt;-->
<!--        <root level="info">-->
<!--            <appender-ref ref="FILE"/>-->
<!--            <appender-ref ref="CONSOLE"/>-->
<!--        </root>-->
<!--        &lt;!&ndash;   子节点向上级传递 局部日志级别-->
<!--                <logger level="WARN" name="org.springframework"/>-->
<!--                <logger level="WARN" name="com.netflix"/>-->
<!--                <logger level="DEBUG" name="org.hibernate.SQL"/> &ndash;&gt;-->
<!--    </springProfile>-->
<!--    <springProfile name="test">-->
<!--        &lt;!&ndash; root节点 全局日志级别，用来指定最基础的日志输出级别 我本地测试,只记录error级别日志 &ndash;&gt;-->
<!--        <root level="info">-->
<!--            <appender-ref ref="FILE"/>-->
<!--            <appender-ref ref="CONSOLE"/>-->
<!--        </root>-->
<!--        &lt;!&ndash;   子节点向上级传递 局部日志级别-->
<!--                 <logger level="WARN" name="org.springframework"/>-->
<!--                 <logger level="WARN" name="com.netflix"/>-->
<!--                 <logger level="DEBUG" name="org.hibernate.SQL"/> &ndash;&gt;-->
<!--    </springProfile>-->
<!--    <springProfile name="prod"> </springProfile>-->
</configuration>